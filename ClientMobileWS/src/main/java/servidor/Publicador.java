
package servidor;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "Publicador", targetNamespace = "http://servidor/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Publicador {


    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGeneric
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarActividadesTuristicasProveedorRequest", output = "http://servidor/Publicador/listarActividadesTuristicasProveedorResponse")
    public DataGeneric listarActividadesTuristicasProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGenericArray
     * @throws NoExistenActividadesException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarActividadesTuristicasConfirmadasProveedorRequest", output = "http://servidor/Publicador/listarActividadesTuristicasConfirmadasProveedorResponse", fault = {
        @FaultAction(className = NoExistenActividadesException_Exception.class, value = "http://servidor/Publicador/listarActividadesTuristicasConfirmadasProveedor/Fault/NoExistenActividadesException")
    })
    public DataGenericArray listarActividadesTuristicasConfirmadasProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoExistenActividadesException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerUrlUsuarioRequest", output = "http://servidor/Publicador/obtenerUrlUsuarioResponse")
    public String obtenerUrlUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/setUrlUsuarioRequest", output = "http://servidor/Publicador/setUrlUsuarioResponse")
    public void setUrlUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerDatosEmailRequest", output = "http://servidor/Publicador/obtenerDatosEmailResponse")
    public DataUsuario obtenerDatosEmail(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerDatosUsrRequest", output = "http://servidor/Publicador/obtenerDatosUsrResponse")
    public DataUsuario obtenerDatosUsr(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/darAltaUsuarioTuristaRequest", output = "http://servidor/Publicador/darAltaUsuarioTuristaResponse")
    public void darAltaUsuarioTurista(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGenericArray
     * @throws NoHaySalidasDisponiblesException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarDatosSalidasVigentesRequest", output = "http://servidor/Publicador/listarDatosSalidasVigentesResponse", fault = {
        @FaultAction(className = NoHaySalidasDisponiblesException_Exception.class, value = "http://servidor/Publicador/listarDatosSalidasVigentes/Fault/NoHaySalidasDisponiblesException")
    })
    public DataGenericArray listarDatosSalidasVigentes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoHaySalidasDisponiblesException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/darAltaUsuarioProveedorRequest", output = "http://servidor/Publicador/darAltaUsuarioProveedorResponse")
    public void darAltaUsuarioProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns servidor.DataSalida
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerDatosSalidaTurRequest", output = "http://servidor/Publicador/obtenerDatosSalidaTurResponse")
    public DataSalida obtenerDatosSalidaTur(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenActividadesException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarActividadesCategoriaRequest", output = "http://servidor/Publicador/listarActividadesCategoriaResponse", fault = {
        @FaultAction(className = NoExistenActividadesException_Exception.class, value = "http://servidor/Publicador/listarActividadesCategoria/Fault/NoExistenActividadesException")
    })
    public DataGeneric listarActividadesCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoExistenActividadesException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenActividadesEnDepartamentoException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarActividadesDepartametoRequest", output = "http://servidor/Publicador/listarActividadesDepartametoResponse", fault = {
        @FaultAction(className = NoExistenActividadesEnDepartamentoException_Exception.class, value = "http://servidor/Publicador/listarActividadesDepartameto/Fault/NoExistenActividadesEnDepartamentoException")
    })
    public DataGeneric listarActividadesDepartameto(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoExistenActividadesEnDepartamentoException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenCategoriasException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarCategoriasActividadRequest", output = "http://servidor/Publicador/listarCategoriasActividadResponse", fault = {
        @FaultAction(className = NoExistenCategoriasException_Exception.class, value = "http://servidor/Publicador/listarCategoriasActividad/Fault/NoExistenCategoriasException")
    })
    public DataGeneric listarCategoriasActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoExistenCategoriasException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/sePuedeFinalizarActividadRequest", output = "http://servidor/Publicador/sePuedeFinalizarActividadResponse")
    public boolean sePuedeFinalizarActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/modificarApellidoUsuarioRequest", output = "http://servidor/Publicador/modificarApellidoUsuarioResponse")
    public void modificarApellidoUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/modificarNacimientoUsuarioRequest", output = "http://servidor/Publicador/modificarNacimientoUsuarioResponse")
    public void modificarNacimientoUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        int arg0,
        @WebParam(name = "arg1", partName = "arg1")
        int arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/modificarNombreUsuarioRequest", output = "http://servidor/Publicador/modificarNombreUsuarioResponse")
    public void modificarNombreUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/setURLActividadRequest", output = "http://servidor/Publicador/setURLActividadResponse")
    public void setURLActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg10
     * @param arg11
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/darAltaSalidacargaRequest", output = "http://servidor/Publicador/darAltaSalidacargaResponse")
    public void darAltaSalidacarga(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        int arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        int arg9,
        @WebParam(name = "arg10", partName = "arg10")
        int arg10,
        @WebParam(name = "arg11", partName = "arg11")
        int arg11);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/existeNickNameRequest", output = "http://servidor/Publicador/existeNickNameResponse")
    public boolean existeNickName(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/guardarImagenRequest", output = "http://servidor/Publicador/guardarImagenResponse")
    public void guardarImagen(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        byte[] arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/getURLActividadRequest", output = "http://servidor/Publicador/getURLActividadResponse")
    public String getURLActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/existeCategoriaRequest", output = "http://servidor/Publicador/existeCategoriaResponse")
    public boolean existeCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/existeSalidaRequest", output = "http://servidor/Publicador/existeSalidaResponse")
    public boolean existeSalida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/setURLSalidaRequest", output = "http://servidor/Publicador/setURLSalidaResponse")
    public void setURLSalida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/getURLSalidaRequest", output = "http://servidor/Publicador/getURLSalidaResponse")
    public String getURLSalida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/existeSalidaActRequest", output = "http://servidor/Publicador/existeSalidaActResponse")
    public boolean existeSalidaAct(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @throws ExcedeCapacidadException_Exception
     * @throws YaTieneInscripcionAEstaSalidaException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/inscribirASalidaRequest", output = "http://servidor/Publicador/inscribirASalidaResponse", fault = {
        @FaultAction(className = ExcedeCapacidadException_Exception.class, value = "http://servidor/Publicador/inscribirASalida/Fault/ExcedeCapacidadException"),
        @FaultAction(className = YaTieneInscripcionAEstaSalidaException_Exception.class, value = "http://servidor/Publicador/inscribirASalida/Fault/YaTieneInscripcionAEstaSalidaException")
    })
    public void inscribirASalida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6)
        throws ExcedeCapacidadException_Exception, YaTieneInscripcionAEstaSalidaException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/cambiarEstadoRequest", output = "http://servidor/Publicador/cambiarEstadoResponse")
    public void cambiarEstado(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/getFileRequest", output = "http://servidor/Publicador/getFileResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://servidor/Publicador/getFile/Fault/IOException")
    })
    public byte[] getFile(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws IOException_Exception
    ;

    /**
     * 
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenDepartamentosException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarDepartamentosRequest", output = "http://servidor/Publicador/listarDepartamentosResponse", fault = {
        @FaultAction(className = NoExistenDepartamentosException_Exception.class, value = "http://servidor/Publicador/listarDepartamentos/Fault/NoExistenDepartamentosException")
    })
    public DataGeneric listarDepartamentos()
        throws NoExistenDepartamentosException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns servidor.DataSalida
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerDatosSalidaRequest", output = "http://servidor/Publicador/obtenerDatosSalidaResponse")
    public DataSalida obtenerDatosSalida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenUsuariosException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarUsuariosRequest", output = "http://servidor/Publicador/listarUsuariosResponse", fault = {
        @FaultAction(className = NoExistenUsuariosException_Exception.class, value = "http://servidor/Publicador/listarUsuarios/Fault/NoExistenUsuariosException")
    })
    public DataGeneric listarUsuarios()
        throws NoExistenUsuariosException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/existeProveedorRequest", output = "http://servidor/Publicador/existeProveedorResponse")
    public boolean existeProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/existeEmailRequest", output = "http://servidor/Publicador/existeEmailResponse")
    public boolean existeEmail(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenCategoriasException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarCategoriasRequest", output = "http://servidor/Publicador/listarCategoriasResponse", fault = {
        @FaultAction(className = NoExistenCategoriasException_Exception.class, value = "http://servidor/Publicador/listarCategorias/Fault/NoExistenCategoriasException")
    })
    public DataGeneric listarCategorias()
        throws NoExistenCategoriasException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerDatosProveedorRequest", output = "http://servidor/Publicador/obtenerDatosProveedorResponse")
    public DataUsuario obtenerDatosProveedor(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerDatosTuristaRequest", output = "http://servidor/Publicador/obtenerDatosTuristaResponse")
    public DataUsuario obtenerDatosTurista(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGeneric
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarSalidasTuristaRequest", output = "http://servidor/Publicador/listarSalidasTuristaResponse")
    public DataGeneric listarSalidasTurista(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg10
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws ExisteActividadException_Exception
     * @throws NoExisteDepartamentoException_Exception
     * @throws NoExisteProveedorException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/darAltaActividadTuristicaRequest", output = "http://servidor/Publicador/darAltaActividadTuristicaResponse", fault = {
        @FaultAction(className = ExisteActividadException_Exception.class, value = "http://servidor/Publicador/darAltaActividadTuristica/Fault/ExisteActividadException"),
        @FaultAction(className = NoExisteDepartamentoException_Exception.class, value = "http://servidor/Publicador/darAltaActividadTuristica/Fault/NoExisteDepartamentoException"),
        @FaultAction(className = NoExisteProveedorException_Exception.class, value = "http://servidor/Publicador/darAltaActividadTuristica/Fault/NoExisteProveedorException")
    })
    public void darAltaActividadTuristica(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        int arg6,
        @WebParam(name = "arg7", partName = "arg7")
        int arg7,
        @WebParam(name = "arg8", partName = "arg8")
        int arg8,
        @WebParam(name = "arg9", partName = "arg9")
        int arg9,
        @WebParam(name = "arg10", partName = "arg10")
        String arg10)
        throws ExisteActividadException_Exception, NoExisteDepartamentoException_Exception, NoExisteProveedorException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenSalidasEnActividadException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarSalidasActividadRequest", output = "http://servidor/Publicador/listarSalidasActividadResponse", fault = {
        @FaultAction(className = NoExistenSalidasEnActividadException_Exception.class, value = "http://servidor/Publicador/listarSalidasActividad/Fault/NoExistenSalidasEnActividadException")
    })
    public DataGeneric listarSalidasActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoExistenSalidasEnActividadException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataActividad
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerDatosActividadRequest", output = "http://servidor/Publicador/obtenerDatosActividadResponse")
    public DataActividad obtenerDatosActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servidor.DataGeneric
     * @throws NoExistenPaquetesEnLaActividadException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarPaquetesActividadRequest", output = "http://servidor/Publicador/listarPaquetesActividadResponse", fault = {
        @FaultAction(className = NoExistenPaquetesEnLaActividadException_Exception.class, value = "http://servidor/Publicador/listarPaquetesActividad/Fault/NoExistenPaquetesEnLaActividadException")
    })
    public DataGeneric listarPaquetesActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoExistenPaquetesEnLaActividadException_Exception
    ;

}
